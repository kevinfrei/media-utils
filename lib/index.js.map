{"version":3,"sources":["../src/index.js"],"names":["Decode","require","Encode","Metadata","module","exports","encoders","decoders","md"],"mappings":"AACA;AACA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAxB;;AA8CAG,MAAM,CAACC,OAAP,GAAiB;AACfH,EAAAA,MADe;AAEfI,EAAAA,QAAQ,EAAEJ,MAFK;AAGfF,EAAAA,MAHe;AAIfO,EAAAA,QAAQ,EAAEP,MAJK;AAKfG,EAAAA,QALe;AAMfK,EAAAA,EAAE,EAAEL;AANW,CAAjB","sourcesContent":["// @flow\n// @format\n'use strict';\n\nconst Decode = require('./decode');\nconst Encode = require('./encode');\nconst Metadata = require('./metadata');\n\nexport type attributes = { [key: string]: string };\nexport type SimpleMetadata = {\n  artist: string,\n  album: string,\n  year?: string,\n  track: string,\n  title: string,\n  compilation?: 'va' | 'ost'\n};\nexport type regexPattern = {\n  compilation?: string | boolean,\n  rgx: RegExp,\n  metadata: { [key: string]: number }\n};\nexport type mdAcquire = (pathname: string) => ?SimpleMetadata;\nexport type mdAcquireAsync = (pathname: string) => Promise<?SimpleMetadata>\nexport type decoder = (inputFile: string, outputFile: string) => boolean;\nexport type decoderAsync =  (inputFile: string, outputFile: string) => Promise<boolean>;\nexport type encoder = (\n  wavFile: string,\n  outputFilename: string,\n  options: ?attributes,\n  attrs: ?attributes\n) => boolean;\nexport type encoderAsync = (\n  wavFile: string,\n  outputFilename: string,\n  options: ?attributes,\n  attrs: ?attributes\n) => Promise<boolean>;\nexport type FullMetadata = {\n  OriginalPath: string,\n  Artist: string,\n  Album: string,\n  Year?: number,\n  Track: number,\n  Title: string,\n  VAType?: 'va' | 'ost',\n  MoreArtists?: Array<string>,\n  Mix?: Array<string>,\n  Disk?: number,\n  DiskOf?: number\n};\n\nmodule.exports = {\n  Encode,\n  encoders: Encode,\n  Decode,\n  decoders: Decode,\n  Metadata,\n  md: Metadata\n};\n"],"file":"index.js"}