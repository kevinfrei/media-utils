// @flow
// @format
'use strict'; // Module:
// media/decode
// Provides compressed audio to wav file tools
// Everything is synchronous currently

const path = require('path');

const {
  ProcUtil,
  PathUtil
} = require('@freik/node-utils');

import type { decoder, decoderAsync } from './index';
declare var mp3: (inputFile: any, outputFile: any) => any;
declare var mp3Async: (inputFile: any, outputFile: any) => any;
declare var flac: (inputFile: any, outputFile: any) => any;
declare var flacAsync: (inputFile: any, outputFile: any) => any;
declare var aac: (inputFile: any, outputFile: any) => any;
declare var aacAsync: (inputFile: any, outputFile: any) => any;
declare var ffmpeg: (inputFile: any, outputFile: any) => any;
declare var ffmpegAsync: (inputFile: any, outputFile: any) => any; // K: we know we need to convert it.
// First convert it to a .wav file

declare var makeWave: (inputFile: string, fileType: ?string) => ?string; // K: we know we need to convert it.
// First convert it to a .wav file

declare var makeWaveAsync: (inputFile: string, fileType: ?string) => Promise<?string>;
module.exports = {
  m4a: aac,
  m4aAsync: aacAsync,
  mp3,
  mp3Async,
  flac,
  flacAsync,
  wma: ffmpeg,
  wmaAsync: ffmpegAsync,
  aac,
  aacAsync,
  ffmpeg,
  ffmpegAsync,
  makeWave,
  makeWaveAsync
};