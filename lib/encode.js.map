{"version":3,"sources":["../src/encode.js"],"names":["ProcUtil","require","ObjUtil","makeM4aArgs","wavFile","outputFilename","options","attrs","args","concat","prefixObj","push","m4a","spawnRes","encoding","m4aAsync","spawnResAsync","makeFfmpegArgs","inputFile","elem","hasOwnProperty","ffmpeg","ffmpegAsync","makeFlacArgs","compilation","trnum","track","tracknumber","attrArray","i","length","flac","flacAsync","module","exports","aac","aacAsync"],"mappings":"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","sourcesContent":["// @flow\n// @format\n'use strict';\n\n// Module:\n// media/encode\n// Provides wav file to compressed audio file tools\n// Everything is synchronous currently\n\nconst { ProcUtil } = require('my-node-utils');\nconst { ObjUtil } = require('my-utils');\n\nimport type { encoder, encoderAsync } from './index';\n\nconst makeM4aArgs = (wavFile, outputFilename, options, attrs): Array<string> => {\n  let args: Array<string> = ['-w', '-o', outputFilename];\n  if (options) {\n    args = args.concat(ObjUtil.prefixObj('-', options));\n  }\n  if (attrs) {\n    args = args.concat(ObjUtil.prefixObj('--', attrs));\n  }\n  args.push(wavFile);\n  return args;\n}\n\nconst m4a: encoder = (wavFile, outputFilename, options, attrs) => {\n  const args = makeM4aArgs(wavFile, outputFilename, options, attrs);\n  return ProcUtil.spawnRes('faac', args, { encoding: 'utf8' });\n};\n\nconst m4aAsync: encoderAsync = async (wavFile, outputFilename, options, attrs) => {\n  const args = makeM4aArgs(wavFile, outputFilename, options, attrs);\n  return await ProcUtil.spawnResAsync('faac', args, { encoding: 'utf8' });\n};\n\nconst makeFfmpegArgs = (inputFile, outputFilename, options, attrs): Array<string> => {\n  let args: Array<string> = ['-i', inputFile, '-vn'];//, '-c:a', 'aac', '-cutoff', '16000' ];\n  if (options) {\n    args = [...args, ...ObjUtil.prefixObj('-', options)];\n  }\n  if (attrs) {\n    for (let elem/*: string*/ in attrs) {\n      if (attrs.hasOwnProperty(elem)) {\n        args.push('-metadata');\n        args.push(elem + '=' + attrs[elem]);\n      }\n    }\n  }\n  args.push(outputFilename);\n  return args;\n}\n\nconst ffmpeg: encoder = (inputFile, outputFilename, options, attrs) => {\n  const args = makeFfmpegArgs(inputFile, outputFilename, options, attrs);\n  return ProcUtil.spawnRes('ffmpeg', args, { encoding: 'utf8' });\n};\n\nconst ffmpegAsync: encoderAsync = async (inputFile, outputFilename, options, attrs) => {\n  const args = makeFfmpegArgs(inputFile, outputFilename, options, attrs);\n  return await ProcUtil.spawnResAsync('ffmpeg', args, { encoding: 'utf8' });\n};\n\nconst makeFlacArgs = (wavFile, outputFilename, options, attrs): Array<string> => {\n  let args: Array<string> = [\n    '--best',\n    '-m',\n    '-r',\n    '8',\n    '-e',\n    '-p',\n    '-o',\n    outputFilename\n  ];\n  if (options) {\n    args = args.concat(ObjUtil.prefixObj('-', options));\n  }\n  if (attrs) {\n    if (attrs.hasOwnProperty('compilation')) {\n      // There's no compilation tag that I know of.\n      delete attrs.compilation;\n    }\n    if (attrs.hasOwnProperty('track')) {\n      const trnum = attrs.track;\n      delete attrs.track;\n      attrs.tracknumber = trnum;\n    }\n    const attrArray = ObjUtil.prefixObj('--tag=', attrs);\n    for (let i = 0; i < attrArray.length; i += 2) {\n      args.push(attrArray[i] + '=' + attrArray[i + 1]);\n    }\n  }\n  args.push(wavFile);\n  return args;\n}\n\nconst flac: encoder = (wavFile, outputFilename, options, attrs) => {\n  const args = makeFlacArgs(wavFile, outputFilename, options, attrs);\n  return ProcUtil.spawnRes('flac', args, { encoding: 'utf8' });\n};\n\nconst flacAsync: encoderAsync = async (wavFile, outputFilename, options, attrs) => {\n  const args = makeFlacArgs(wavFile, outputFilename, options, attrs);\n  return await ProcUtil.spawnResAsync('flac', args, { encoding: 'utf8' });\n};\n\nmodule.exports = {\n  aac: m4a,\n  aacAsync: m4aAsync,\n  m4a,\n  m4aAsync,\n  flac,\n  flacAsync,\n  ffmpeg,\n  ffmpegAsync\n}\n"],"file":"encode.js"}